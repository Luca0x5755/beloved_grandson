"""add index and ondelete on task

Revision ID: c03e8c9c3b97
Revises: 39ccafb04b87
Create Date: 2025-08-17 01:22:19.992079

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'c03e8c9c3b97'
down_revision = '39ccafb04b87'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # 安全移除 apscheduler_jobs 表（如果存在的話）
    from sqlalchemy import inspect
    
    inspector = inspect(op.get_bind())
    existing_tables = inspector.get_table_names()
    
    if 'apscheduler_jobs' in existing_tables:
        with op.batch_alter_table('apscheduler_jobs', schema=None) as batch_op:
            batch_op.drop_index(batch_op.f('ix_apscheduler_jobs_next_run_time'))
        op.drop_table('apscheduler_jobs')
    with op.batch_alter_table('alert_notifications', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('alert_notifications_therapist_id_fkey'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('alert_notifications_patient_id_fkey'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'users', ['therapist_id'], ['id'], ondelete='CASCADE')
        batch_op.create_foreign_key(None, 'users', ['patient_id'], ['id'], ondelete='CASCADE')

    with op.batch_alter_table('tasks', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('tasks_created_by_fkey'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('tasks_assignee_id_fkey'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('tasks_patient_id_fkey'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'users', ['created_by'], ['id'], ondelete='SET NULL')
        batch_op.create_foreign_key(None, 'users', ['assignee_id'], ['id'], ondelete='CASCADE')
        batch_op.create_foreign_key(None, 'users', ['patient_id'], ['id'], ondelete='SET NULL')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('tasks', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('tasks_patient_id_fkey'), 'users', ['patient_id'], ['id'])
        batch_op.create_foreign_key(batch_op.f('tasks_assignee_id_fkey'), 'users', ['assignee_id'], ['id'])
        batch_op.create_foreign_key(batch_op.f('tasks_created_by_fkey'), 'users', ['created_by'], ['id'])

    with op.batch_alter_table('alert_notifications', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('alert_notifications_patient_id_fkey'), 'users', ['patient_id'], ['id'])
        batch_op.create_foreign_key(batch_op.f('alert_notifications_therapist_id_fkey'), 'users', ['therapist_id'], ['id'])

    op.create_table('apscheduler_jobs',
    sa.Column('id', sa.VARCHAR(length=191), autoincrement=False, nullable=False),
    sa.Column('next_run_time', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('job_state', postgresql.BYTEA(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('apscheduler_jobs_pkey'))
    )
    with op.batch_alter_table('apscheduler_jobs', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_apscheduler_jobs_next_run_time'), ['next_run_time'], unique=False)

    # ### end Alembic commands ###
